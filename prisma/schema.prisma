generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  email     String   @unique
  name      String
  password  String
  isAdmin   Boolean  @default(false)
  updatedAt DateTime @updatedAt

  // Stripe related fields
  stripeCustomerId String?  // removed @unique to avoid MongoDB null duplication issue
  subscriptions    Subscription[]
  payments         Payment[]
}

model Subscription {
  id                     String            @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String            @db.ObjectId
  stripeSubscriptionId   String            @unique
  stripePriceId          String
  stripeCurrentPeriodEnd DateTime
  status                 SubscriptionStatus
  plan                   SubscriptionPlan
  createdAt              DateTime          @default(now())
  updatedAt              DateTime          @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  payments Payment[]
}

model Contact {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  subject   String
  message   String
  createdAt DateTime @default(now()) @db.Date
}

model ContactForm {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  email        String
  howCanWeHelp String
  description  String
  subscription Boolean
  howSubscribe String
  deviceType   String
  createdAt    DateTime @default(now()) @db.Date
}

model Blog {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  content     String
  image       String[]
  slug        String   @unique
  author      String
  tags        String[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  isPublished Boolean  @default(false)
}

model Payment {
  id                String        @id @default(auto()) @map("_id") @db.ObjectId
  stripePaymentId   String        @unique
  userId            String        @db.ObjectId
  amount            Int           // Amount in cents
  currency          String        @default("usd")
  status            PaymentStatus
  subscriptionId    String?       @db.ObjectId
  createdAt         DateTime      @default(now())

  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  subscription Subscription? @relation(fields: [subscriptionId], references: [id], onDelete: SetNull)
}

model Deal {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String
  image       String
  price       Float?
  tags        String[] 
  savings     Float?    
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}



enum SubscriptionStatus {
  ACTIVE
  CANCELED
  INCOMPLETE
  INCOMPLETE_EXPIRED
  PAST_DUE
  UNPAID
  TRIALING
  EXPIRED
}

enum SubscriptionPlan {
  ESSENTIAL
  PREMIUM
}

enum PaymentStatus {
  PENDING
  SUCCEEDED
  FAILED
  CANCELED
}